[{"/home/mohame_saafan/projects/cs309/src/index.tsx":"1","/home/mohame_saafan/projects/cs309/src/App.tsx":"2","/home/mohame_saafan/projects/cs309/src/components/doctorloginpage/index.tsx":"3","/home/mohame_saafan/projects/cs309/src/components/mainpage/index.tsx":"4","/home/mohame_saafan/projects/cs309/src/components/doctorregisterpage/index.tsx":"5","/home/mohame_saafan/projects/cs309/src/reducers/index.js":"6","/home/mohame_saafan/projects/cs309/src/components/searchabledropdown/index.tsx":"7","/home/mohame_saafan/projects/cs309/src/components/diseases/index.tsx":"8"},{"size":786,"mtime":1608497986050,"results":"9","hashOfConfig":"10"},{"size":1535,"mtime":1608497049475,"results":"11","hashOfConfig":"10"},{"size":1753,"mtime":1608492319594,"results":"12","hashOfConfig":"10"},{"size":1370,"mtime":1609014298547,"results":"13","hashOfConfig":"10"},{"size":2971,"mtime":1608539740877,"results":"14","hashOfConfig":"10"},{"size":189,"mtime":1608497954286,"results":"15","hashOfConfig":"10"},{"size":3550,"mtime":1609070369374,"results":"16","hashOfConfig":"10"},{"size":466,"mtime":1609014111869,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"ui6giq",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/home/mohame_saafan/projects/cs309/src/index.tsx",["41","42","43"],"import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n\ninterface State {\n  dummyState: String;\n}\ninterface Action {\n  type: String;\n}\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers =\n  (window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"] as typeof compose) || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n",["44","45"],"/home/mohame_saafan/projects/cs309/src/App.tsx",["46"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText,\n} from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport DoctorLoginPage from \"./components/doctorloginpage\";\nimport MainPage from \"./components/mainpage\";\nimport DoctorRegisterPage from \"./components/doctorregisterpage\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <div className='App'>\n      <Navbar color='light' light expand='md'>\n        <div className='container'>\n          <NavbarBrand href='/'>DiogonizeMe</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav className='ml-auto' navbar>\n              <NavItem>\n                <NavLink href='/login'>LogIn</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href='/register'>Register</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </div>\n      </Navbar>\n      <Router>\n        <Switch>\n          <Route path='/' exact component={MainPage} />\n          <Route path='/login' exact component={DoctorLoginPage} />\n          <Route path='/register' component={DoctorRegisterPage} />\n          <Redirect to='/' />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mohame_saafan/projects/cs309/src/components/doctorloginpage/index.tsx",["47"],"import React, { FormEvent, FormEventHandler, useState } from \"react\";\nimport \"./doctorloginpage.css\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {}\n\nconst DoctorLoginPage: React.FC = (props: Props) => {\n  const [emailValue, setEmailValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    alert(JSON.stringify({ emailValue, passwordValue }));\n  };\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className={`container mt-5 border p-5 loginContainer`}\n    >\n      <div className='form-group w-50  emailContainer'>\n        <label htmlFor='email'>Email address</label>\n        <input\n          type='loginEmail'\n          className='form-control'\n          id='loginEmail'\n          aria-describedby='emailHelp'\n          placeholder='Enter email'\n          name='email'\n          value={emailValue}\n          onChange={(e) => {\n            setEmailValue(e.target.value);\n          }}\n        />\n        <small id='emailHelp' className='form-text text-muted'></small>\n      </div>\n      <div className='form-group w-50 m-auto'>\n        <label htmlFor='loginPassword'>Password</label>\n        <input\n          type='password'\n          className='form-control'\n          id='loginPassword'\n          placeholder='Password'\n          name='password'\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n        />\n        <button type='submit' className='btn btn-primary d-block ml-auto mt-5'>\n          login\n        </button>\n        <Link to='/register' className='d-block m-auto'>\n          Don't have an Account?\n        </Link>\n      </div>\n    </form>\n  );\n};\nexport default DoctorLoginPage;\n","/home/mohame_saafan/projects/cs309/src/components/mainpage/index.tsx",["48","49","50"],"import React, { useState } from \"react\";\nimport \"./mainpage.css\";\nimport { reduxForm } from \"redux-form\";\nimport faker from \"faker\";\nimport DropDown from \"../searchabledropdown\";\nimport Diseases from \"../diseases\";\n\nconst MainPage: React.FC = (props) => {\n  const [inputValue, setInputValue] = useState<String>(\"\");\n  return (\n    <div className={`container `}>\n      <div className='form-group  mt-5 container maininput'>\n        <label htmlFor='searchInput'>Enter Syndrome:</label>\n        <DropDown\n          className='form-control '\n          id='searchInput'\n          placeholder='Enter a Syndrome'\n        />\n        <small id='emailHelp' className='form-text text-muted'>\n          We'll Your Results Below\n        </small>\n        <button type='submit' className='btn btn-primary ml-auto d-block'>\n          Search\n        </button>\n      </div>\n      <div className='container '>\n        <div className='media'>\n          <img\n            className='mr-3 bordered'\n            src={faker.image.avatar()}\n            alt='Generic placeholder image'\n          />\n          <div className='media-body'>\n            <h5 className='mt-0'>Doctor's Name</h5>\n            Any Thing we Want To Display Here About The Doctor\n          </div>\n        </div>\n      </div>\n      <Diseases />\n    </div>\n  );\n};\nexport default reduxForm({\n  form: \"mainForm\",\n})(MainPage);\n","/home/mohame_saafan/projects/cs309/src/components/doctorregisterpage/index.tsx",["51","52","53"],"import React, { FormEvent, useState } from \"react\";\nimport Styles from \"./doctorregisterpage.module.css\";\nimport { Field, FormSubmitHandler, reduxForm } from \"redux-form\";\nimport { compose } from \"redux\";\n\ninterface FiedlArguments {\n  input: InputType;\n  meta: MetaType;\n  type: string;\n  label: string;\n}\ninterface MetaType {\n  error: String;\n  touched: boolean;\n}\ninterface InputType {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n}\n\nconst renderField: React.FC<FiedlArguments> = ({\n  input,\n  label,\n  type,\n  meta: { touched, error },\n}) => {\n  console.log(input.value);\n  return (\n    <div className='form-group  registerInputWrapper'>\n      <label>{label}</label>\n\n      <input\n        {...input}\n        placeholder={label}\n        type={type}\n        className='form-control '\n      />\n      {touched && error && <span>{error}</span>}\n    </div>\n  );\n};\n\ninterface Props {}\n\nconst DoctorRegisterPage: React.FC = (props: Props) => {\n  const [files, setFiles] = useState<FileList | null>(null);\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFiles(e.target.files);\n  };\n  const handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    console.log(files, \"from files\");\n    if (files) {\n      console.log(files[0]);\n    }\n  };\n  return (\n    <form className={`container w-50 border p-5 my-5`} onSubmit={handleSubmit}>\n      <Field\n        name='password'\n        component={renderField}\n        label='Password'\n        type='password'\n      />\n      <Field name='email' component={renderField} type='email' label='Email' />\n      <Field name='name' component={renderField} type='text' label='Name' />\n      <Field\n        name='facebookProfileLink'\n        component={renderField}\n        type='text'\n        label='Facbebook Profile Link'\n      />\n      <Field\n        name='phoneNumber'\n        component={renderField}\n        type='tel'\n        label='Phone Number'\n      />\n      <Field\n        name='clinicName'\n        component={renderField}\n        type='text'\n        label='Clinic Name'\n      />\n      <div>\n        <label>Sex</label>\n        <div>\n          <label>\n            <Field name='sex' component='input' type='radio' value='male' />{\" \"}\n            Male\n          </label>\n          <br />\n          <label>\n            <Field name='sex' component='input' type='radio' value='female' />{\" \"}\n            Female\n          </label>\n        </div>\n      </div>\n\n      <Field\n        name='clinicAddress'\n        component={renderField}\n        type='text'\n        label='Clinic Address'\n      />\n      <Field\n        name='nationalID'\n        component={renderField}\n        type='number'\n        label='NationalID'\n      />\n      <input type='file' onChange={handleFileChange} />\n      <button type='submit' className='btn btn-primary ml-auto d-block'>\n        Submit\n      </button>\n    </form>\n  );\n};\nexport default reduxForm({ form: \"register\" })(DoctorRegisterPage);\n","/home/mohame_saafan/projects/cs309/src/reducers/index.js",[],["54","55"],"/home/mohame_saafan/projects/cs309/src/components/searchabledropdown/index.tsx",["56","57"],"/home/mohame_saafan/projects/cs309/src/components/diseases/index.tsx",[],{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":10,"column":11,"nodeType":"60","messageId":"61","endLine":10,"endColumn":16},{"ruleId":"58","severity":1,"message":"63","line":13,"column":11,"nodeType":"60","messageId":"61","endLine":13,"endColumn":17},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"68","line":11,"column":3,"nodeType":"60","messageId":"61","endLine":11,"endColumn":13},{"ruleId":"58","severity":1,"message":"69","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":44},{"ruleId":"58","severity":1,"message":"70","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":20},{"ruleId":"58","severity":1,"message":"71","line":9,"column":22,"nodeType":"60","messageId":"61","endLine":9,"endColumn":35},{"ruleId":"72","severity":1,"message":"73","line":28,"column":11,"nodeType":"74","endLine":32,"endColumn":13},{"ruleId":"58","severity":1,"message":"75","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":14},{"ruleId":"58","severity":1,"message":"76","line":3,"column":17,"nodeType":"60","messageId":"61","endLine":3,"endColumn":34},{"ruleId":"58","severity":1,"message":"77","line":4,"column":10,"nodeType":"60","messageId":"61","endLine":4,"endColumn":17},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"78","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":20},{"ruleId":"58","severity":1,"message":"79","line":101,"column":9,"nodeType":"60","messageId":"61","endLine":101,"endColumn":22},"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'State' is defined but never used.","'Action' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'NavbarText' is defined but never used.","'FormEventHandler' is defined but never used.","'inputValue' is assigned a value but never used.","'setInputValue' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Styles' is defined but never used.","'FormSubmitHandler' is defined but never used.","'compose' is defined but never used.","'JsxElement' is defined but never used.","'fetchDiseases' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]